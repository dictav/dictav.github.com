#! /usr/bin/env ruby
# coding: utf-8

require "haml"

ARGV.each do |file|
  next if file.match /^template/
  puts "processing '#{file}' ..."
  template = nil
  basename = File.basename file, ".haml"
  params= {:@basename => File.basename(basename, ".*")}
  content = ""
  File.readlines(file, encoding:'UTF-8').each do |line|
    if line.match /^-#\s*(\S+):\s*(.+)$/
      if  $1 == "layout"
        template = $2
      else
        key = "@" + $1
        params[key.to_sym] = $2
      end
    else
      content += line
    end
  end
  puts "params => " + params.to_s
  params[:@content] = content
  if template.to_s.empty?
    template = "template.haml"
  end
  puts "layout: #{template}"
  haml = Haml::Engine.new File.read("_layout/" + template), :format => :html5
  html = haml.render Object.new, params
  filename = "../" + basename.gsub(".","/") + ".html"
  dir = File.dirname filename
  unless File.exist? dir
    Dir.mkdir dir
  end
  puts "writting #{filename}"
  File.open(filename, "w"){|f| f.write html}

  puts "'#{file}' done."
end
